// array will be {5, 10, 20, 50, 100, 500, 1000}
// we are going to do approximation with n number of subdivisions
// user will input a, b
// program will find int_{a}^{b}(sin(x) dx) using both methods
// returns array of strings "n method1value method2value"

#include <stdio.h>
#include <math.h>

float area_average_rectangles(int n, float a, float b) {
	float A_h = 0, h = 0, x = 0;
	h = (b - a) / n;
	x = a - h / 2;
	for (int i = 0; i < n; i++) {
		x += h;
		A_h += sin(x);
	}

	return h * A_h;
}

float area_simpsons(int n, float a, float b) {
	float A = 0, h = 0;
	float x = a;
	h = (b - a) / n;
	for (int i = 1; i <= n; i++) {
		if (i % 2 == 0) {
			A += (2 * sin(x));
		}
		else {
			A += (4 * sin(x));
		}
		x += h;
	}
	return (h / 3) * (sin(a) + sin(b) + A);
}

void array_return(int* arr, int arrlen, float a, float b) {
	int n = 0;
	printf("-------------------------------------------\n");
	printf("Values entered: a = %.4f, b = %.4f\n", a, b);
	printf("-------------------------------------------\n");
	printf("   n\t| simp\t\trec_avg\n");
	printf("-------------------------------------------\n");
	for (int i = 0; i < arrlen; i++) {
		n = arr[i];
		printf("   %d\t| %.5f\t%.5f\n", n, area_simpsons(n, a, b), area_average_rectangles(n, a, b));
	}
}

int main() {
	int arr[] = { 5, 10, 20, 50, 100, 500, 1000 };
	float a = 0, b = 0;
	printf("Enter a and b on one line: \n");
	scanf_s("%f %f", &a, &b);
	array_return(arr, 7, a, b);
	return 0;
}
